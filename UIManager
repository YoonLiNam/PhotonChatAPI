using UnityEngine;
using System.Collections;
using UnityEngine.UI;
using System;

public class UIManager : MonoBehaviour {

    static UIManager instance;
    public static UIManager Instance
    {
        get { return instance; }
    }
    private void Awake()
    {
        instance = this;
    }

    [SerializeField]
    GameObject popUpPanel;

    [SerializeField]
    Text popUpText;

    [SerializeField]
    InputField PopUpInputFieldText;

    [SerializeField]
    GameObject exitButton;

    [SerializeField]
    GameObject friendList;

    [SerializeField]
    GameObject content;

    [SerializeField]
    GameObject chatSlotPrefab;

    [SerializeField]
    GameObject chatInputField;

    [SerializeField]
    GameObject loginPanel;

    [SerializeField]
    GameObject loadingPanel;

    [SerializeField]
    InputField userIdInputField;

    [SerializeField]
    InputField friendInputField;
   
    string guildName;
    
    private void Start()
    {
        Screen.SetResolution(405, 720, false);
        
        loginPanel.SetActive(true);
        friendList.SetActive(false);
    }
    // 접속 버튼 클릭했을 때
    public void OnClickLogin()
    {
        PhotonChatManager.Instance.UserName = userIdInputField.text;
        userIdInputField.text = "";
        
        StartCoroutine(Connect());
        
        
    }
    IEnumerator Connect()
    {
        loadingPanel.SetActive(true);
        yield return StartCoroutine(PhotonChatManager.Instance.PhotonChatConnect());
        loginPanel.SetActive(false);
    }
    public void PopUpShow(string popupMessage)
    {
        popUpPanel.SetActive(true);
        popUpText.text = popupMessage;
    }

    public void PopUpClose()
    {
        popUpPanel.SetActive(false);
    }

    public void ExitButtonShow()
    {
        exitButton.SetActive(true);
    }

    public void ExitButtonClose()
    {
        exitButton.SetActive(false);
    }


    //길드 가입 버튼 눌렀을때
    public void OnclickGuildJoin()
    {
        guildName = PopUpInputFieldText.text;
        PopUpInputFieldText.text = "";
        if (string.IsNullOrEmpty(guildName))
        {
            guildName = "Guild" + Environment.TickCount % 99;
        }
        PhotonChatManager.Instance.selectedChannelName = guildName;
        PhotonChatManager.Instance.ChatSubscribe(guildName.Split(new char[] { ' ', ',' }));
        OnClickGuildButton();


    }

    // 친구 채팅 슬롯 생성
    public void InstantiateChatSlot(string chatName)
    {
        ChatSlot[] chatslots = content.transform.GetComponentsInChildren<ChatSlot>();
        foreach (ChatSlot c in chatslots)
        {
            if(c.chatNameText.text == chatName)
            {
                return;
            }
        }

        GameObject chatslot = Instantiate(chatSlotPrefab);
        chatslot.GetComponent<ChatSlot>().chatNameText.text = chatName;
        chatslot.transform.SetParent(content.transform, false);
    }


    // 객 채널 버튼을 눌렀을 때 사용되는 메소드 ===============================================================
    /// <summary> 일반 버튼 클릭 </summary>
    public void OnClickNormalButton()
    {
        PhotonChatManager.Instance.ShowChannel("Normal");
        friendList.SetActive(false);
        chatInputField.SetActive(true);
        ExitButtonClose();
        PopUpClose();
    }
    
    /// <summary> 친구 버튼 클릭 </summary>
    public void OnClickFriendButton()
    {
        friendList.SetActive(true);
        chatInputField.SetActive(false);
        ExitButtonClose();
        PopUpClose();
    }
    /// <summary> 길드 버튼 클릭 </summary>
    public void OnClickGuildButton()
    {
        if (!string.IsNullOrEmpty(guildName))
        {
            PhotonChatManager.Instance.ShowChannel(guildName);
            ExitButtonShow();
            PopUpClose();
            chatInputField.SetActive(true);
        }
        else
        {
            PopUpShow("길드 이름을 입력하세요.");
            ExitButtonClose();
            chatInputField.SetActive(false);
            PhotonChatManager.Instance.clearChannel();
        }
        friendList.SetActive(false);

    }

    //==========================================================================

    /// <summary> 나가기 버튼 눌렀을 때 </summary>
    public void OnClickExitButton()
    {
        if(PhotonChatManager.Instance.PrivateChatCheck())
        {
            // 1:1 채팅방 나가기
            friendList.SetActive(true);
            chatInputField.SetActive(false);
            ExitButtonClose();
        }
        else
        {
            // 길드 채팅방 나가기        
            PhotonChatManager.Instance.OnUnsubscribed(guildName.Split(new char[] { ' ', ',' }));
            PhotonChatManager.Instance.clearChannel();
            guildName = null;
            OnClickGuildButton();
        }
        
    }

    /// <summary> 친구 추가할 때 </summary>
    public void FriendChatAdd()
    {
        if(string.IsNullOrEmpty(friendInputField.text))
        {
            Debug.Log("친구추가할 아이디를 입력하세요");
            return;
        }
        PhotonChatManager.Instance.PrivateChatAdd(friendInputField.text);
        friendInputField.text = "";
    }

    /// <summary>  친구 대화창 열 때 </summary>
    public void friendChatShow(string friendName)
    {
        friendList.SetActive(false);
        PhotonChatManager.Instance.ShowChannel(friendName);
        chatInputField.SetActive(true);
        ExitButtonShow();
    }
    
        

}
